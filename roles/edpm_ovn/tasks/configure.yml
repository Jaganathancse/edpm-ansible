---
# Copyright 2022 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Configure GW ports on chassis setting when enabled
  when: edpm_enable_chassis_gw|default(false)
  block:
    - name: Set enable-chassis-as-gw
      ansible.builtin.set_fact:
        cms_options:
          ovn-cms-options: "enable-chassis-as-gw"

    - name: Append CMS options to external_ids
      ansible.builtin.set_fact:
        edpm_ovn_ovs_external_ids: "{{ edpm_ovn_ovs_external_ids | combine(cms_options) }}"

- name: Enable DPDK when required
  when: edpm_enable_ovs_dpdk|bool
  block:
    - name: Add ovs dpdk if enabled
      ansible.builtin.set_fact:
        ovs_dpdk:
          dpdk-init: true

    - name: Append other_config with ovs_dpdk
      ansible.builtin.set_fact:
        other_config: "{{ edpm_ovn_ovs_other_config | combine(ovs_dpdk) }}"

- name: add PMD cores config
  when: edpm_ovs_dpdk_pmd_core_list|string
  block:
    - name: Add PMD cores
      ansible.builtin.set_fact:
        ovs_dpdk_pmd_cores:
          pmd-cpu-mask: "{{ edpm_ovs_dpdk_pmd_core_list | osp.edpm.cpu_mask }}"

    - name: Append other_config with ovs_dpdk_pmd_cores
      ansible.builtin.set_fact:
        other_config: "{{ edpm_ovn_ovs_other_config | combine(ovs_dpdk_pmd_cores) }}"

- name: add DPDK lcores config
  when: edpm_ovs_dpdk_lcore_list|string
  block:
    - name: Add ovs DPDK lcores
      ansible.builtin.set_fact:
        ovs_dpdk_lcores:
          dpdk-lcore-mask: "{{ edpm_ovs_dpdk_lcore_list | osp.edpm.cpu_mask }}"

    - name: Append other_config with ovs_dpdk_lcores
      ansible.builtin.set_fact:
        other_config: "{{ edpm_ovn_ovs_other_config | combine(ovs_dpdk_lcores) }}"

- name: add DPDK extra config if required
  when: edpm_ovs_dpdk_extra|string
  block:
    - name: Add DPDK extra
      ansible.builtin.set_fact:
        ovs_dpdk_extra:
          dpdk-extra: "{{ edpm_ovs_dpdk_extra }}"

    - name: Append other_config with ovs_dpdk_extra
      ansible.builtin.set_fact:
        other_config: "{{ edpm_ovn_ovs_other_config | combine(ovs_dpdk_extra) }}"

- name: add socket-mem and socket-limit config
  when: edpm_ovs_dpdk_socket_memory|string
  block:
    - name: Add ovs_dpdk_socket_memory
      ansible.builtin.set_fact:
        ovs_dpdk_socket_memory:
          dpdk-socket-mem: "{{ edpm_ovs_dpdk_socket_memory }}"
          dpdk-socket-limit: "{{ edpm_ovs_dpdk_socket_memory }}"

    - name: Append other_config with ovs_dpdk_socket_memory
      ansible.builtin.set_fact:
        other_config: "{{ edpm_ovn_ovs_other_config | combine(ovs_dpdk_socket_memory) }}"

- name: add Revalidator threads config if required
  when: edpm_ovs_dpdk_revalidator_cores|string
  block:
    - name: Add DPDK Revalidator threads 
      ansible.builtin.set_fact:
        ovs_dpdk_revalidator_cores:
          n-revalidator-threads: "{{ edpm_ovs_dpdk_revalidator_cores }}"

    - name: Append other_config with ovs_dpdk_revalidator_cores
      ansible.builtin.set_fact:
        other_config: "{{ edpm_ovn_ovs_other_config | combine(ovs_dpdk_revalidator_cores) }}"

- name: add EMC Insertion Probability config if required
  when: edpm_ovs_dpdk_emc_insertion_probablity|string
  block:
    - name: Add EMC Insertion Probability config
      ansible.builtin.set_fact:
        ovs_dpdk_emc_insertion_probablity:
          emc-insert-inv-prob: "{{ edpm_ovs_dpdk_emc_insertion_probablity }}"

    - name: Append other_config with ovs_dpdk_emc_insertion_probablity
      ansible.builtin.set_fact:
        other_config: "{{ edpm_ovn_ovs_other_config | combine(ovs_dpdk_emc_insertion_probablity) }}"

- name: Enable TSO in datapath if required
  when: edpm_ovs_dpdk_enable_tso|bool
  block:
    - name: Add TSO in datapath
      ansible.builtin.set_fact:
        ovs_dpdk_enable_tso:
          emc-insert-inv-prob: "{{ edpm_ovs_dpdk_enable_tso }}"

    - name: Append other_config with ovs_dpdk_enable_tso
      ansible.builtin.set_fact:
        other_config: "{{ edpm_ovn_ovs_other_config | combine(ovs_dpdk_enable_tso) }}"

- name: Enable postcopy support if required
  when: edpm_ovs_dpdk_vhost_postcopy_support|bool
  block:
    - name: Add postcopy support
      ansible.builtin.set_fact:
        ovs_dpdk_vhost_postcopy_support:
          vhost-postcopy-support: "{{ edpm_ovs_dpdk_vhost_postcopy_support }}"

    - name: Append other_config with ovs_dpdk_vhost_postcopy_support
      ansible.builtin.set_fact:
        other_config: "{{ edpm_ovn_ovs_other_config | combine(ovs_dpdk_vhost_postcopy_support) }}"

- name: Enable DPDK OVS PMD Auto Load Balance if required
  when: edpm_ovs_dpdk_pmd_auto_lb|bool
  block:
    - name: Add DPDK OVS PMD Auto Load Balance
      ansible.builtin.set_fact:
        ovs_dpdk_pmd_auto_lb:
          pmd-auto-lb: "{{ edpm_ovs_dpdk_pmd_auto_lb }}"

    - name: Append other_config with ovs_dpdk_pmd_auto_lb
      ansible.builtin.set_fact:
        other_config: "{{ edpm_ovn_ovs_other_config | combine(ovs_dpdk_pmd_auto_lb) }}"

- name: add minimum PMD thread load threshold if required
  when: edpm_ovs_dpdk_pmd_load_threshold|string
  block:
    - name: Add minimum PMD thread load threshold
      ansible.builtin.set_fact:
        ovs_dpdk_pmd_load_threshold:
          pmd-auto-lb-load-threshold: "{{ edpm_ovs_dpdk_pmd_load_threshold }}"

    - name: Append other_config with ovs_dpdk_pmd_load_threshold
      ansible.builtin.set_fact:
        other_config: "{{ edpm_ovn_ovs_other_config | combine(ovs_dpdk_pmd_load_threshold) }}"

- name: add PMD load variance improvement threshold if required
  when: edpm_ovs_dpdk_pmd_improvement_threshold|string
  block:
    - name: Add PMD load variance improvement threshold
      ansible.builtin.set_fact:
        ovs_dpdk_pmd_improvement_threshold:
          pmd-auto-lb-improvement-threshold: "{{ edpm_ovs_dpdk_pmd_improvement_threshold }}"

    - name: Append other_config with ovs_dpdk_pmd_improvement_threshold
      ansible.builtin.set_fact:
        other_config: "{{ edpm_ovn_ovs_other_config | combine(ovs_dpdk_pmd_improvement_threshold) }}"

- name: add PMD auto load balancing interval if required
  when: edpm_ovs_dpdk_pmd_rebal_interval|string
  block:
    - name: Add PMD auto load balancing interval
      ansible.builtin.set_fact:
        ovs_dpdk_pmd_rebal_interval:
          pmd-auto-lb-rebal-interval: "{{ edpm_ovs_dpdk_pmd_rebal_interval }}"

    - name: Append other_config with ovs_dpdk_pmd_rebal_interval
      ansible.builtin.set_fact:
        other_config: "{{ edpm_ovn_ovs_other_config | combine(ovs_dpdk_pmd_rebal_interval) }}"

- name: Configure hw-offload when required
  when: edpm_enable_hw_offload | default(false)
  block:
    - name: Add hw-offload if enabled
      ansible.builtin.set_fact:
        hw_offload:
          hw-offload: true

    - name: Append other_config with hw-offload
      ansible.builtin.set_fact:
        other_config: "{{ edpm_ovn_ovs_other_config | combine(hw_offload) }}"

- name: Configure OVS external_ids
  ansible.builtin.shell: >
    ovs-vsctl set open . {% for key, value in edpm_ovn_ovs_external_ids.items() %} external_ids:{{ key }}={{ value }} {% endfor %}

- name: Configure OVS other_config
  ansible.builtin.shell: >
    ovs-vsctl set open . {% for key, value in edpm_ovn_ovs_other_config.items() %} other_config:{{ key }}={{ value }} {% endfor %}

- name: Disable mlockall in ovs
  when: edpm_ovs_dpdk_vhost_postcopy_support|bool
  replace:
    path: '/etc/sysconfig/openvswitch'
    regexp: '^OPTIONS.*'
    replace: 'OPTIONS="{{ edpm_ovs_dpdk_vhost_postcopy_ovs_options }}"'

- name: Add OVS Manager
  block:
    - name: Check if OVS Manager already exists
      ansible.builtin.shell: >
        ovs-vsctl show | grep -q "Manager"
      register: ovs_manager_configured
      ignore_errors: yes
    - name: Add OVS Manager if not exists
      ansible.builtin.shell: >
        ovs-vsctl --timeout=5 --id=@manager -- create Manager target=\"ptcp:6640:127.0.0.1\" -- add Open_vSwitch . manager_options @manager
      when: ovs_manager_configured.rc == 1

- name: Configure neutron configuration files
  block:
    - name: Ensure {{ edpm_ovn_neutron_config_dir }}/etc/neutron/plugins/networking-ovn exists
      ansible.builtin.file:
        path: "{{ edpm_ovn_neutron_config_dir }}/etc/neutron/plugins/networking-ovn"
        state: directory
        recurse: true

    - name: Remove neutron_metadata_config container
      ansible.builtin.shell: >
        podman rm -f neutron_metadata_config || :

    - name: Run neutron_metadata_agent container
      ansible.builtin.shell: >
          podman run --detach --name neutron_metadata_config {{ edpm_ovn_metadata_agent_image }} sleep infinity
      register: metadata_container_id

    - name: register_metadata_id
      ansible.builtin.debug:
        msg: "{{ metadata_container_id }}"

    - name: Copy initial neutron.conf files
      ansible.builtin.shell: |
        mount_dir=$(podman mount neutron_metadata_config)
        cp -a ${mount_dir}/etc/neutron/neutron.conf {{ edpm_ovn_neutron_config_dir }}/etc/neutron/neutron.conf
      failed_when: false
      register: copy_config_files

    - name: Copy initial rootwrap.conf files
      ansible.builtin.shell: |
        mount_dir=$(podman mount neutron_metadata_config)
        cp -a ${mount_dir}/etc/neutron/rootwrap.conf {{ edpm_ovn_neutron_config_dir }}/etc/neutron/rootwrap.conf
      failed_when: false
      register: copy_config_files

    - name: Copy initial neutron-metadata-ini.conf files
      ansible.builtin.shell: |
        mount_dir=$(podman mount neutron_metadata_config)
        cp -a ${mount_dir}/etc/neutron/neutron_ovn_metadata_agent.ini {{ edpm_ovn_neutron_config_dir }}/etc/neutron/plugins/networking-ovn/networking-ovn-metadata-agent.ini
      failed_when: false
      register: copy_config_files

    - name: Remove neutron_metadata_config container
      ansible.builtin.shell: >
        podman rm -f neutron_metadata_config || :

    - name: Configure neutron.conf
      openstack.config_template.config_template:
        src: "{{ edpm_ovn_neutron_config_dir }}/etc/neutron/neutron.conf"
        dest: "{{ edpm_ovn_neutron_config_dir }}/etc/neutron/neutron.conf"
        config_type: ini
        config_overrides: "{{ edpm_ovn_metadata_agent_neutron_config | combine(edpm_ovn_metadata_agent_neutron_config_overrides, recursive=True) }}"

    - name: Configure rootwrap.conf
      openstack.config_template.config_template:
        src: "{{ edpm_ovn_neutron_config_dir }}/etc/neutron/rootwrap.conf"
        dest: "{{ edpm_ovn_neutron_config_dir }}/etc/neutron/rootwrap.conf"
        config_type: ini
        config_overrides: "{{ edpm_ovn_metadata_agent_rootwrap_config | combine(edpm_ovn_metadata_agent_rootwrap_config_overrides, recursive=True) }}"

    - name: Configure networking-ovn-metadata-agent.ini
      openstack.config_template.config_template:
        src: "{{ edpm_ovn_neutron_config_dir }}/etc/neutron/plugins/networking-ovn/networking-ovn-metadata-agent.ini"
        dest: "{{ edpm_ovn_neutron_config_dir }}/etc/neutron/plugins/networking-ovn/networking-ovn-metadata-agent.ini"
        config_type: ini
        config_overrides: "{{ edpm_ovn_metadata_agent_metadata_agent_config | combine(edpm_ovn_metadata_agent_metadata_agent_config_overrides, recursive=True) }}"
